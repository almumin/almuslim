// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart';
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'models/app-context.dart';
import 'models/quran-entity.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <ModelEntity>[
  ModelEntity(
      id: const IdUid(1, 7764714462544937502),
      name: 'QuranAyah',
      lastPropertyId: const IdUid(7, 223215796289975394),
      flags: 0,
      properties: <ModelProperty>[
        ModelProperty(
            id: const IdUid(1, 6872092311447497324),
            name: 'id',
            type: 6,
            flags: 129),
        ModelProperty(
            id: const IdUid(2, 1368515039137800596),
            name: 'surahNumber',
            type: 6,
            flags: 0),
        ModelProperty(
            id: const IdUid(3, 6950827306546038413),
            name: 'ayahNumber',
            type: 6,
            flags: 0),
        ModelProperty(
            id: const IdUid(4, 1642707768174414378),
            name: 'text',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(5, 823086920123750362),
            name: 'englishText',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(6, 1018373693025123464),
            name: 'readAlready',
            type: 1,
            flags: 0),
        ModelProperty(
            id: const IdUid(7, 223215796289975394),
            name: 'isFavorite',
            type: 1,
            flags: 0)
      ],
      relations: <ModelRelation>[],
      backlinks: <ModelBacklink>[]),
  ModelEntity(
      id: const IdUid(2, 7214744480193890939),
      name: 'AppContext',
      lastPropertyId: const IdUid(5, 7474378556238101246),
      flags: 0,
      properties: <ModelProperty>[
        ModelProperty(
            id: const IdUid(1, 6107345605398642440),
            name: 'id',
            type: 6,
            flags: 129),
        ModelProperty(
            id: const IdUid(2, 3833497024695475614),
            name: 'language',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(3, 1013211941853219768),
            name: 'theme',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(4, 4505056168950788936),
            name: 'calculationMethod',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(5, 7474378556238101246),
            name: 'madhab',
            type: 9,
            flags: 0)
      ],
      relations: <ModelRelation>[],
      backlinks: <ModelBacklink>[]),
  ModelEntity(
      id: const IdUid(3, 4193584269556766753),
      name: 'Surahs',
      lastPropertyId: const IdUid(13, 5656218785544262904),
      flags: 0,
      properties: <ModelProperty>[
        ModelProperty(
            id: const IdUid(1, 8577842436994331573),
            name: 'id',
            type: 6,
            flags: 129),
        ModelProperty(
            id: const IdUid(3, 7945993237969536718),
            name: 'ayah',
            type: 6,
            flags: 0),
        ModelProperty(
            id: const IdUid(4, 9095630420609565526),
            name: 'revelationOrder',
            type: 6,
            flags: 0),
        ModelProperty(
            id: const IdUid(5, 5325076825970464319),
            name: 'type',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(8, 8613143732554671805),
            name: 'arabic',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(9, 9128014178088181167),
            name: 'arabicShort',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(10, 7861016389685188317),
            name: 'english',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(11, 3672222303442107672),
            name: 'latin',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(12, 6539070021196121660),
            name: 'location',
            type: 6,
            flags: 0),
        ModelProperty(
            id: const IdUid(13, 5656218785544262904),
            name: 'sajda',
            type: 6,
            flags: 0)
      ],
      relations: <ModelRelation>[],
      backlinks: <ModelBacklink>[])
];

/// Open an ObjectBox store with the model declared in this file.
Future<Store> openStore(
        {String directory,
        int maxDBSizeInKB,
        int fileMode,
        int maxReaders,
        bool queriesCaseSensitiveDefault = true,
        String macosApplicationGroup}) async =>
    Store(getObjectBoxModel(),
        directory: directory ?? (await defaultStoreDirectory()).path,
        maxDBSizeInKB: maxDBSizeInKB,
        fileMode: fileMode,
        maxReaders: maxReaders,
        queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
        macosApplicationGroup: macosApplicationGroup);

/// ObjectBox model definition, pass it to [Store] - Store(getObjectBoxModel())
ModelDefinition getObjectBoxModel() {
  final model = ModelInfo(
      entities: _entities,
      lastEntityId: const IdUid(3, 4193584269556766753),
      lastIndexId: const IdUid(0, 0),
      lastRelationId: const IdUid(0, 0),
      lastSequenceId: const IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        835934456095440465,
        3359417456112261306,
        2633017384070580102
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, EntityDefinition>{
    QuranAyah: EntityDefinition<QuranAyah>(
        model: _entities[0],
        toOneRelations: (QuranAyah object) => [],
        toManyRelations: (QuranAyah object) => {},
        getId: (QuranAyah object) => object.id,
        setId: (QuranAyah object, int id) {
          object.id = id;
        },
        objectToFB: (QuranAyah object, fb.Builder fbb) {
          final textOffset =
              object.text == null ? null : fbb.writeString(object.text);
          final englishTextOffset = object.englishText == null
              ? null
              : fbb.writeString(object.englishText);
          fbb.startTable(8);
          fbb.addInt64(0, object.id ?? 0);
          fbb.addInt64(1, object.surahNumber);
          fbb.addInt64(2, object.ayahNumber);
          fbb.addOffset(3, textOffset);
          fbb.addOffset(4, englishTextOffset);
          fbb.addBool(5, object.readAlready);
          fbb.addBool(6, object.isFavorite);
          fbb.finish(fbb.endTable());
          return object.id ?? 0;
        },
        objectFromFB: (Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = QuranAyah()
            ..id =
                const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 4)
            ..surahNumber =
                const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 6)
            ..ayahNumber =
                const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 8)
            ..text = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 10)
            ..englishText = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 12)
            ..readAlready =
                const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 14)
            ..isFavorite =
                const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 16);

          return object;
        }),
    AppContext: EntityDefinition<AppContext>(
        model: _entities[1],
        toOneRelations: (AppContext object) => [],
        toManyRelations: (AppContext object) => {},
        getId: (AppContext object) => object.id,
        setId: (AppContext object, int id) {
          object.id = id;
        },
        objectToFB: (AppContext object, fb.Builder fbb) {
          final languageOffset =
              object.language == null ? null : fbb.writeString(object.language);
          final themeOffset =
              object.theme == null ? null : fbb.writeString(object.theme);
          final calculationMethodOffset = object.calculationMethod == null
              ? null
              : fbb.writeString(object.calculationMethod);
          final madhabOffset =
              object.madhab == null ? null : fbb.writeString(object.madhab);
          fbb.startTable(6);
          fbb.addInt64(0, object.id ?? 0);
          fbb.addOffset(1, languageOffset);
          fbb.addOffset(2, themeOffset);
          fbb.addOffset(3, calculationMethodOffset);
          fbb.addOffset(4, madhabOffset);
          fbb.finish(fbb.endTable());
          return object.id ?? 0;
        },
        objectFromFB: (Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = AppContext(
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 6),
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 8))
            ..id =
                const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 4)
            ..calculationMethod = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 10)
            ..madhab = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 12);

          return object;
        }),
    Surahs: EntityDefinition<Surahs>(
        model: _entities[2],
        toOneRelations: (Surahs object) => [],
        toManyRelations: (Surahs object) => {},
        getId: (Surahs object) => object.id,
        setId: (Surahs object, int id) {
          object.id = id;
        },
        objectToFB: (Surahs object, fb.Builder fbb) {
          final typeOffset =
              object.type == null ? null : fbb.writeString(object.type);
          final arabicOffset =
              object.arabic == null ? null : fbb.writeString(object.arabic);
          final arabicShortOffset = object.arabicShort == null
              ? null
              : fbb.writeString(object.arabicShort);
          final englishOffset =
              object.english == null ? null : fbb.writeString(object.english);
          final latinOffset =
              object.latin == null ? null : fbb.writeString(object.latin);
          fbb.startTable(14);
          fbb.addInt64(0, object.id ?? 0);
          fbb.addInt64(2, object.ayah);
          fbb.addInt64(3, object.revelationOrder);
          fbb.addOffset(4, typeOffset);
          fbb.addOffset(7, arabicOffset);
          fbb.addOffset(8, arabicShortOffset);
          fbb.addOffset(9, englishOffset);
          fbb.addOffset(10, latinOffset);
          fbb.addInt64(11, object.location);
          fbb.addInt64(12, object.sajda);
          fbb.finish(fbb.endTable());
          return object.id ?? 0;
        },
        objectFromFB: (Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = Surahs(
              id: const fb.Int64Reader()
                  .vTableGetNullable(buffer, rootOffset, 4),
              arabic: const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 18),
              arabicShort: const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 20),
              english: const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 22),
              latin: const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 24),
              ayah: const fb.Int64Reader()
                  .vTableGetNullable(buffer, rootOffset, 8),
              revelationOrder: const fb.Int64Reader()
                  .vTableGetNullable(buffer, rootOffset, 10),
              location: const fb.Int64Reader()
                  .vTableGetNullable(buffer, rootOffset, 26),
              type: const fb.StringReader(asciiOptimization: true).vTableGetNullable(buffer, rootOffset, 12),
              sajda: const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 28));

          return object;
        })
  };

  return ModelDefinition(model, bindings);
}

/// [QuranAyah] entity fields to define ObjectBox queries.
class QuranAyah_ {
  /// see [QuranAyah.id]
  static final id = QueryIntegerProperty<QuranAyah>(_entities[0].properties[0]);

  /// see [QuranAyah.surahNumber]
  static final surahNumber =
      QueryIntegerProperty<QuranAyah>(_entities[0].properties[1]);

  /// see [QuranAyah.ayahNumber]
  static final ayahNumber =
      QueryIntegerProperty<QuranAyah>(_entities[0].properties[2]);

  /// see [QuranAyah.text]
  static final text =
      QueryStringProperty<QuranAyah>(_entities[0].properties[3]);

  /// see [QuranAyah.englishText]
  static final englishText =
      QueryStringProperty<QuranAyah>(_entities[0].properties[4]);

  /// see [QuranAyah.readAlready]
  static final readAlready =
      QueryBooleanProperty<QuranAyah>(_entities[0].properties[5]);

  /// see [QuranAyah.isFavorite]
  static final isFavorite =
      QueryBooleanProperty<QuranAyah>(_entities[0].properties[6]);
}

/// [AppContext] entity fields to define ObjectBox queries.
class AppContext_ {
  /// see [AppContext.id]
  static final id =
      QueryIntegerProperty<AppContext>(_entities[1].properties[0]);

  /// see [AppContext.language]
  static final language =
      QueryStringProperty<AppContext>(_entities[1].properties[1]);

  /// see [AppContext.theme]
  static final theme =
      QueryStringProperty<AppContext>(_entities[1].properties[2]);

  /// see [AppContext.calculationMethod]
  static final calculationMethod =
      QueryStringProperty<AppContext>(_entities[1].properties[3]);

  /// see [AppContext.madhab]
  static final madhab =
      QueryStringProperty<AppContext>(_entities[1].properties[4]);
}

/// [Surahs] entity fields to define ObjectBox queries.
class Surahs_ {
  /// see [Surahs.id]
  static final id = QueryIntegerProperty<Surahs>(_entities[2].properties[0]);

  /// see [Surahs.ayah]
  static final ayah = QueryIntegerProperty<Surahs>(_entities[2].properties[1]);

  /// see [Surahs.revelationOrder]
  static final revelationOrder =
      QueryIntegerProperty<Surahs>(_entities[2].properties[2]);

  /// see [Surahs.type]
  static final type = QueryStringProperty<Surahs>(_entities[2].properties[3]);

  /// see [Surahs.arabic]
  static final arabic = QueryStringProperty<Surahs>(_entities[2].properties[4]);

  /// see [Surahs.arabicShort]
  static final arabicShort =
      QueryStringProperty<Surahs>(_entities[2].properties[5]);

  /// see [Surahs.english]
  static final english =
      QueryStringProperty<Surahs>(_entities[2].properties[6]);

  /// see [Surahs.latin]
  static final latin = QueryStringProperty<Surahs>(_entities[2].properties[7]);

  /// see [Surahs.location]
  static final location =
      QueryIntegerProperty<Surahs>(_entities[2].properties[8]);

  /// see [Surahs.sajda]
  static final sajda = QueryIntegerProperty<Surahs>(_entities[2].properties[9]);
}
